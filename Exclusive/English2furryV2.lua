local GuiService = game:GetService("GuiService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local translatorGui = Instance.new("ScreenGui")
translatorGui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.4, 0, 0.4, 0)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = translatorGui

local input = Instance.new("TextBox")
input.Size = UDim2.new(0.8, 0, 0.3, 0)
input.Position = UDim2.new(0.1, 0, 0.1, 0)
input.PlaceholderText = "Enter text to translate"
input.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
input.TextColor3 = Color3.fromRGB(255, 255, 255)
input.Font = Enum.Font.SourceSans
input.TextSize = 18
input.ClipsDescendants = true
input.TextTruncate = Enum.TextTruncate.AtEnd
input.Parent = frame

local output = Instance.new("TextBox")
output.Size = UDim2.new(0.8, 0, 0.3, 0)
output.Position = UDim2.new(0.1, 0, 0.5, 0)
output.TextEditable = false
output.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
output.TextColor3 = Color3.fromRGB(255, 255, 255)
output.Font = Enum.Font.SourceSans
output.TextSize = 18
output.ClipsDescendants = true
output.TextTruncate = Enum.TextTruncate.AtEnd
output.Parent = frame

local translateButton = Instance.new("TextButton")
translateButton.Size = UDim2.new(0.4, 0, 0.1, 0)
translateButton.Position = UDim2.new(0.1, 0, 0.8, 0)
translateButton.Text = "Translate"
translateButton.BackgroundColor3 = Color3.fromRGB(106, 57, 173)
translateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
translateButton.Font = Enum.Font.SourceSans
translateButton.TextSize = 18
translateButton.Parent = frame

local copyButton = Instance.new("TextButton")
copyButton.Size = UDim2.new(0.4, 0, 0.1, 0)
copyButton.Position = UDim2.new(0.5, 0, 0.8, 0)
copyButton.Text = "Copy"
copyButton.BackgroundColor3 = Color3.fromRGB(106, 57, 173)
copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
copyButton.Font = Enum.Font.SourceSans
copyButton.TextSize = 18
copyButton.Parent = frame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.1, 0, 0.1, 0)
toggleButton.Position = UDim2.new(0.9, 0, 0, 0)
toggleButton.BackgroundTransparency = 0.7
toggleButton.Text = "Toggle"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSans
toggleButton.TextSize = 18
toggleButton.Parent = translatorGui

local isVisible = true

local translations = {
    ["R"] = "W", ["r"] = "w",
    ["L"] = "W", ["l"] = "w",
    ["ahh"] = "murr",
    ["awesome"] = "pawsome",
    ["awful"] = "pawful",
    ["bite"] = "nom",
    ["bye"] = "bai",
    ["child"] = "cub",
    ["dragon"] = "derg",
    ["fuck"] = "fluff",
    ["father"] = "daddy",
    ["for"] = "fur",
    ["hand"] = "paw",
    ["hell"] = "hecc",
    ["hi"] = "hai",
    ["hyena"] = "yeen",
    ["lmao"] = "hehe~",
    ["love"] = "wuv",
    ["mouth"] = "maw",
    ["perfect"] = "purrfect",
    ["persona"] = "fursona",
    ["pervert"] = "furvert",
    ["roar"] = "rawr",
    ["shout"] = "awoo",
    ["the"] = "teh",
    ["this"] = "dis",
    ["what"] = "wat",
    ["with"] = "wif",
    ["you"] = "chu",
    ["your"] = "ur",
    [","] = "~",
    [";"] = "~",
    ["!"] = "owo!",
    ["?"] = "uwu?",
    [":)"] = ":3",
    [":O"] = "OwO",
    [":D"] = "UwU",
    ["XD"] = "X3",
}

local function applyTranslations(text)
    local result = ""
    local i = 1

    while i <= #text do
        local found = false

        for original, translated in pairs(translations) do
            local originalLength = #original

            if text:sub(i, i + originalLength - 1):lower() == original then
                result = result .. (text:sub(i, i):upper() == text:sub(i, i) and translated:upper() or translated)
                i = i + originalLength - 1
                found = true
                break
            end
        end

        if not found then
            result = result .. text:sub(i, i)
        end

        i = i + 1
    end

    return result
end

local function enableDragging(gui)
    local dragging
    local dragInput
    local dragStart
    local startPos

    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

enableDragging(frame)
enableDragging(toggleButton)

toggleButton.MouseButton1Click:Connect(function()
    isVisible = not isVisible
    frame.Visible = isVisible
end)

translateButton.MouseButton1Click:Connect(function()
    if input.Text ~= "" then
        output.Text = applyTranslations(input.Text)
    end
end)

copyButton.MouseButton1Click:Connect(function()
    setclipboard(tostring(output.Text))
end)
