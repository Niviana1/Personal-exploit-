local settings = {noclipKey="World69",clicktpKey="T",cmdKey="Semicolon",clickespKey="LeftControl"}
local tpIgnore = true
local tpExact = false
local espLimit = 9999
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local CoreGui = game:GetService("CoreGui")
local player = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
player = Players.LocalPlayer
local cam = workspace.CurrentCamera
math.randomseed(tick())
local root
if readfile then
    pcall(function()
        local new = game:GetService("HttpService"):JSONDecode(readfile("EssenceSettings.txt"))
        local doOverwrite=false
        for k,v in pairs(new) do
            if settings[k]==nil then
                doOverwrite=true
                new[k]=nil
            end
        end
        for k,v in pairs(settings) do
            if new[k]==nil then
                doOverwrite=true
                new[k]=v
            end
        end
        if doOverwrite then
            writefile("EssenceSettings.txt",game:GetService("HttpService"):JSONEncode(new))
        end
        settings = new
    end)
    game.Close:Connect(function()
        writefile("EssenceSettings.txt",game:GetService("HttpService"):JSONEncode(settings))
    end)
end
local adminCommands = {
    rj = function() game:GetService("TeleportService"):Teleport(game.PlaceId,player) end,
    rejoin = function() game:GetService("TeleportService"):Teleport(game.PlaceId,player) end,
    ws = function(argsString) player.Character.Humanoid.WalkSpeed = tonumber(argsString) end,
    jp = function(argsString) player.Character.Humanoid.JumpPower = tonumber(argsString) end,
    hh = function(argsString)
        if argsString == '' then
            if player.Character.Humanoid.HipHeight > 2.5 then
                player.Character.Humanoid.HipHeight = 2
            else
                player.Character.Humanoid.HipHeight = 10
            end
        else
            player.Character.Humanoid.HipHeight = tonumber(argsString)
        end
    end,
    goto = function(argsString)
        local target = getPlayer(argsString)
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            if tpExact then
                root.CFrame = target.Character.HumanoidRootPart.CFrame
            else
                player.Character:MoveTo(target.Character.HumanoidRootPart.CFrame.p)
            end
        end
    end,
}
function getFirstChild(service,str,modifier)
    local children = service:GetChildren()
    for i=1,#children do
        local v = children[i]
        for s in string.gmatch(v.Name,"%S+") do
            if modifier(s:sub(1,#str)) == str then
                return v
            end
        end
    end
end
function findObject(service,str)
    if service and str and #str>0 then
        local targ = service:FindFirstChild(str) or service:FindFirstChild(str:lower())
        if targ then
            return targ
        else
            return getFirstChild(service,str,(str:lower()==str and string.lower) or function(x) return x end)
        end
    end
end
function getPlayer(str)
    if str:lower()=="me" then
        return player
    elseif str:lower()=="random" then
        local players = Players:GetPlayers()
        for i=1,#players do
            if players[i]==player then
                table.remove(players,i)
                break
            end
        end
        return players[math.random(1,#players)]
    elseif str:sub(1,1)=='%' then
        local team = findObject(game:GetService('Teams'),str:sub(2))
        if team then
            local players = team:GetPlayers()
            for i=1,#players do
                if players[i]==player then
                    table.remove(players,i)
                    break
                end
            end
            return players[math.random(1,#players)]
        end
    else
        return findObject(Players,str)
    end
end
local espManagementTick = 0
local function espManage()
    espManagementTick = tick()
    local camPos = cam.CFrame.p
    local folders = espGui:GetChildren()
    for i=1,#folders do
        folders[i].Box.Visible = false
        folders[i].BillboardGui.Enabled = false
    end
    local players = Players:GetPlayers()
    for i=1,#players do
        local p = players[i]
        local folder = espGui:FindFirstChild(p.UserId) or Instance.new("Folder",espGui)
        folder.Name = p.UserId
        folder.Box.Visible = false
        folder.BillboardGui.Enabled = false
        local humanoid = p.Character and p.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health > 0 and humanoid.Parent:IsA("Model") then
            local head = humanoid.Parent:FindFirstChild("Head")
            if head then
                local pos, onScreen = cam:WorldToViewportPoint(head.Position)
                if onScreen then
                    local dist = (camPos - head.Position).Magnitude
                    if dist <= espLimit then
                        local size = math.clamp(300 / dist, 10, 50)
                        folder.Box.Size = Vector2.new(size, size)
                        folder.Box.Position = UDim2.new(0, pos.x - size / 2, 0, pos.y - size / 2)
                        folder.Box.Visible = true
                        folder.BillboardGui.Enabled = true
                        folder.BillboardGui.Adornee = head
                    end
                end
            end
        end
    end
end
local function onKey(key,state)
    if state == Enum.UserInputState.Begin then
        if key.KeyCode == Enum.KeyCode[settings.noclipKey] then
            noclip = not noclip
            if noclip then
                player.Character:Move(Vector3.new(0,10,0))
            end
        elseif key.KeyCode == Enum.KeyCode[settings.clicktpKey] then
            clicktp = not clicktp
            if clicktp then
                StarterGui:SetCore("SendNotification",{Title="Click TP Enabled",Text="Click on a part to teleport there"})
            end
        elseif key.KeyCode == Enum.KeyCode[settings.cmdKey] then
            cmdBar.Visible = not cmdBar.Visible
            if cmdBar.Visible then
                cmdBar:CaptureFocus()
            else
                cmdBar.Text = ""
            end
        elseif key.KeyCode == Enum.KeyCode[settings.clickespKey] then
            espLimit = (espLimit == 9999) and 200 or 9999
            StarterGui:SetCore("SendNotification",{Title="ESP Range",Text="Changed to: "..tostring(espLimit)})
        end
    end
end
local function onRenderStepped()
    local time = tick()
    if noclip then
        local char = player.Character
        if char then
            for _,v in pairs(char:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    end
    if clicktp then
        local target = UIS.MouseHit
        if target then
            player.Character:MoveTo(target.p)
        end
    end
    if time - espManagementTick > 1 then
        espManage()
    end
end
local function onTextBoxFocusLost()
    cmdBar.Visible = false
    if cmdBar.Text ~= "" then
        local args = {}
        for s in string.gmatch(cmdBar.Text,"%S+") do
            table.insert(args,s)
        end
        local cmd = table.remove(args,1):lower()
        local func = adminCommands[cmd]
        if func then
            func(table.concat(args," "))
        else
            print("Unknown command:",cmd)
        end
    end
    cmdBar.Text = ""
end
local function onCharacterAdded(char)
    root = char:WaitForChild("HumanoidRootPart")
end
local function onPlayerRemoving(p)
    local folder = espGui:FindFirstChild(p.UserId)
    if folder then
        folder:Destroy()
    end
end
local function onPlayerAdded(p)
    p.CharacterAdded:Connect(onCharacterAdded)
    p.Character:WaitForChild("HumanoidRootPart")
    espManage()
end
local function onNewMessage(message)
    if message.IsSystem and message.Type == Enum.ChatType.Players then
        espManage()
    end
end
local function onPlayerAdded(p)
    p.CharacterAdded:Connect(onCharacterAdded)
    p.Character:WaitForChild("HumanoidRootPart")
    p.Chatted:Connect(onNewMessage)
    espManage()
end
local function onPlayerRemoving(p)
    local folder = espGui:FindFirstChild(p.UserId)
    if folder then
        folder:Destroy()
    end
end
local function onCoreGuiChanged(coreGuiType)
    if coreGuiType == Enum.CoreGuiType.Backpack then
        return
    end
    if CoreGui:FindFirstChild("RobloxGui") then
        CoreGui.RobloxGui:Destroy()
    end
    espGui = Instance.new("Folder")
    espGui.Name = "ESP"
    espGui.Parent = CoreGui
    espGui.ResetOnSpawn = false
end
local function onChatBarFocusChanged()
    if not UIS:GetFocusedTextBox() then
        cmdBar.Visible = false
        cmdBar.Text = ""
    end
end
UIS.InputBegan:Connect(onKey)
UIS.InputChanged:Connect(function(input,gameProcessed)
    if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 and clicktp then
        local target = UIS.MouseHit
        if target then
            player.Character:MoveTo(target.p)
        end
    end
end)
UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and clicktp then
        player.Character:MoveTo(player.Character:WaitForChild("HumanoidRootPart").Position)
    end
end)
UIS.InputBegan:Connect(onKey)
UIS.RenderStepped:Connect(onRenderStepped)
UIS.InputBegan:Connect(onKey)
UIS.InputBegan:Connect(onKey)
cmdBar.FocusLost:Connect(onTextBoxFocusLost)
Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)
Players.LocalPlayer.Chatted:Connect(onNewMessage)
CoreGui.ChildAdded:Connect(onCoreGuiChanged)
UIS.TextBoxFocused:Connect(onChatBarFocusChanged)
