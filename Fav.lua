-- Function to load a script from a given URL
local function loadScript(scriptUrl)
    local success, scriptCode = pcall(game.HttpGet, game, scriptUrl)
    if success then
        local scriptFunction = loadstring(scriptCode)
        if scriptFunction then
            scriptFunction()
        else
            warn("Failed to execute loaded script from URL:", scriptUrl)
        end
    else
        warn("Failed to fetch script from URL:", scriptUrl)
        warn("Error details:", scriptCode) -- Include the error details for better debugging
    end
end

-- Get references to player, GuiService, and UserInputService
local player = game.Players.LocalPlayer
local guiService = game:GetService("GuiService")
local userInputService = game:GetService("UserInputService")

-- Create a ScreenGui for the hub
local hubGui = Instance.new("ScreenGui")
hubGui.Parent = player.PlayerGui

-- Create a draggable frame for the hub
local draggableFrame = Instance.new("Frame")
draggableFrame.Parent = hubGui
draggableFrame.Size = UDim2.new(0, 200, 0, 260)
draggableFrame.Position = UDim2.new(0, 10, 0, 10)
draggableFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
draggableFrame.BorderSizePixel = 2
draggableFrame.BorderColor3 = Color3.fromRGB(25, 25, 25)

-- Create buttons with the updated style
local buttons = {
    {Text = "Aim Bot", ScriptUrl = 'https://raw.githubusercontent.com/PABLOSleuth2/Scripts1/main/RobloxScripts/TEST/aimbot_v2.lua'},
    {Text = "Hitbox", ScriptUrl = "https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/HitboxExpander.lua"},
    {Text = "Death Zone", ScriptUrl = 'https://soggyhubv2.vercel.app/Roblox/DeathZone.lua'}
}

for _, buttonInfo in ipairs(buttons) do
    local button = Instance.new("TextButton")
    button.Parent = draggableFrame
    button.Position = UDim2.new(0, 15, 0, 40 * #buttons)
    button.Size = UDim2.new(0, 170, 0, 40)
    button.Text = buttonInfo.Text

    -- Button style
    button.BackgroundColor3 = Color3.fromRGB(70, 120, 200)
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansSemibold
    button.TextScaled = true

    button.MouseButton1Click:Connect(function()
        loadScript(buttonInfo.ScriptUrl)
    end)
end

-- Variables for handling drag input
local touchStarted, dragStart, startPos

-- Handle touch input for drag
draggableFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        touchStarted = true
        dragStart = input.Position
        startPos = draggableFrame.Position
    end
end)

-- Update frame position during touch drag
userInputService.InputChanged:Connect(function(input)
    if touchStarted and input.UserInputType == Enum.UserInputType.Touch then
        local delta = input.Position - dragStart
        draggableFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Reset touchStarted flag on touch input end
userInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        touchStarted = false
    end
end)
