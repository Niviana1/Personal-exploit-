-- Function to load a script from a given URL
local function loadScript(scriptUrl)
    local success, scriptCode = pcall(game.HttpGet, game, scriptUrl)
    if success then
        local scriptFunction = loadstring(scriptCode)
        if scriptFunction then
            scriptFunction()
        else
            warn("Failed to load script from URL:", scriptUrl)
        end
    else
        warn("Failed to fetch script from URL:", scriptUrl)
    end
end

-- Get references to player, GuiService, and UserInputService
local player = game.Players.LocalPlayer
local guiService = game:GetService("GuiService")
local userInputService = game:GetService("UserInputService")

-- Create a ScreenGui for the hub
local hubGui = Instance.new("ScreenGui")
hubGui.Parent = player.PlayerGui

-- Create a draggable frame for the hub
local draggableFrame = Instance.new("Frame")
draggableFrame.Parent = hubGui
draggableFrame.Size = UDim2.new(0, 200, 0, 260)
draggableFrame.Position = UDim2.new(0, 10, 0, 10)
draggableFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
draggableFrame.BorderSizePixel = 2
draggableFrame.BorderColor3 = Color3.fromRGB(25, 25, 25)

-- Create a close button for the hub
local closeButton = Instance.new("TextButton")
closeButton.Parent = draggableFrame
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
closeButton.BorderSizePixel = 0
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.MouseButton1Click:Connect(function()
    hubGui:Destroy()
end)

-- Define the style for buttons
local buttonStyle = {
    BackgroundColor3 = Color3.fromRGB(70, 120, 200),
    BorderSizePixel = 0,
    TextColor3 = Color3.fromRGB(255, 255, 255),
    Font = Enum.Font.SourceSansSemibold,
    TextScaled = true
}

-- Create buttons with the updated style

-- Create button 1 (Aim Bot)
local button1 = Instance.new("TextButton")
button1.Parent = draggableFrame
button1.Position = UDim2.new(0, 15, 0, 40)
button1.Size = UDim2.new(0, 170, 0, 40)
button1.Text = "Aim Bot"
for property, value in pairs(buttonStyle) do
    button1[property] = value
end
button1.MouseButton1Click:Connect(function()
    loadScript('https://raw.githubusercontent.com/PABLOSleuth2/Scripts1/main/RobloxScripts/TEST/aimbot_v2.lua')
end)

-- Create button 2 (Hitbox)
local button2 = Instance.new("TextButton")
button2.Parent = draggableFrame
button2.Position = UDim2.new(0, 15, 0, 90)
button2.Size = UDim2.new(0, 170, 0, 40)
button2.Text = "Hitbox"
for property, value in pairs(buttonStyle) do
    button2[property] = value
end
button2.MouseButton1Click:Connect(function()
    loadScript("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/HitboxExpander.lua")
end)

-- Create button 3 (Death Zone)
local button3 = Instance.new("TextButton")
button3.Parent = draggableFrame
button3.Position = UDim2.new(0, 15, 0, 140)
button3.Size = UDim2.new(0, 170, 0, 40)
button3.Text = "Death Zone"
for property, value in pairs(buttonStyle) do
    button3[property] = value
end
button3.MouseButton1Click:Connect(function()
    loadScript('https://soggyhubv2.vercel.app/Roblox/DeathZone.lua')
end)

-- Variables for handling drag input
local touchStarted, dragStart, startPos

-- Handle touch input for drag
draggableFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        touchStarted = true
        dragStart = input.Position
        startPos = draggableFrame.Position
    end
end)

-- Update frame position during touch drag
userInputService.InputChanged:Connect(function(input)
    if touchStarted and input.UserInputType == Enum.UserInputType.Touch then
        local delta = input.Position - dragStart
        draggableFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Reset touchStarted flag on touch input end
userInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        touchStarted = false
    end
end)
